apply plugin: 'com.android.application'
//apply from: 'tinker-support.gradle'
//apply plugin: 'com.jakewharton.butterknife'
apply from: "../pgyer.gradle"
//引入aspectj插件 测试登入，添加埋点之类的
//apply plugin: 'com.hujiang.android-aspectjx'

//apply plugin: 'walle'
//
//walle {
//    // 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
//    // 定制渠道包的APK的文件名称
//    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
//    // 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channel")
//}


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.developtoolsApplicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        ndk { abiFilters "armeabi-v7a" }

        manifestPlaceholders = [
                JPUSH_PKGNAME   : rootProject.ext.android.developtoolsApplicationId,
                JPUSH_APPKEY    : "164fb03b070dc2577cc68e68", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL   : "developer-default", //暂时填写默认值即可.
                GETUI_APP_ID    : "f8NySc60rn7fyuqjKyydT4",
                GETUI_APP_KEY   : "LNwBFcHaE88BVXOn5yJXW8",
                GETUI_APP_SECRET: "rFnu9RhCGDABpdhqfUcDQ7"
        ]

//       arouter需要配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }






    signingConfigs {
        debug {
            keyAlias 'DevelopTools'
            keyPassword '111111'
            storeFile file('./keystore/DevelopTools.jks')
            storePassword '111111'
        }
//        MD5: C1:2E:B5:7D:B4:D1:B4:25:12:24:C1:F3:AA:3D:19:64
//        SHA1: 69:20:39:88:79:7D:CF:1E:88:60:DA:B5:93:7C:E2:0E:CD:15:04:31
//        SHA256: 5C:6F:73:9C:D7:B4:2F:02:9A:5D:D5:7E:D1:4A:EC:6A:6A:06:54:40:27:66:F0:EF:3E:B0:B8:EF:A3:77:4B:23
//        签名算法名称: SHA256withRSA
//        版本: 3
        release {
            keyAlias 'DevelopTools'
            keyPassword '111111'
            storeFile file('./keystore/DevelopTools.jks')
            storePassword '111111'
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    dexOptions {
//        jumboMode = true
//    }

//    dexOptions {
//        maxProcessCount 4
//        javaMaxHeapSize "8g"
//    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    aaptOptions {
        cruncherEnabled false
    }

    compileOptions.encoding = "UTF-8"

    //aar 文件导入
    repositories {
        flatDir {
            dirs 'libs', '../commonlibrary/libs'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    debugApi(rootProject.ext.deps["debug-db"]) {
        exclude group: 'com.android.support'
    }
    // 添加aspect module
    //    implementation project(':trackpoint')
    implementation project(':module_login')
    annotationProcessor rootProject.ext.deps["arouter-compiler"]
    //butterknife
    implementation rootProject.ext.deps["butterknife"]
    annotationProcessor rootProject.ext.deps["butterknife-compiler"]
    //glide
    annotationProcessor rootProject.ext.deps["glide-compiler"]
    //dragger
//    annotationProcessor rootProject.ext.deps["dagger-compiler"]
    //最顶层依赖activity已经封装过 整个架构模式确定结束
    api project(':commonlibrary')
    implementation project(':uilibrary')
//    implementation project(':skinlibrary')
    if (!rootProject.ext.isBuildModule) {
//        implementation project(':uitestdemo')
//        implementation project(':sdktestdemo')
//        implementation project(':module_wanandroid')
//        implementation project(':aroutertestdemo')
    }
    //集成推送
//    implementation rootProject.ext.deps["jpush"]
//    implementation rootProject.ext.deps["jcore"]

    //集成个推
//    implementation rootProject.ext.deps["getui"]
    implementation rootProject.ext.deps["autosize"]

    //    implementation project(':commonservice')
    implementation files('libs/json_simple-1.1.jar')
    implementation 'com.hjq:xxpermissions:8.2'
    //聊天模块
//    implementation project(':im_huanxing')



////基础组件库依赖(必须) Push 6.1.0版本必须升级新版本Common SDK
//    implementation 'com.umeng.umsdk:common:9.1.0'
//    implementation 'com.umeng.umsdk:utdid:1.5.2'
//    implementation  'com.umeng.umsdk:asms:1.1.3'
//    implementation 'com.umeng.umsdk:crash:0.0.4'
//
////友盟push相关依赖(必须)
//    implementation 'com.umeng.umsdk:push:6.1.0'
//
//    implementation 'com.umeng.umsdk:alicloud-httpdns:1.2.5'
//    implementation 'com.umeng.umsdk:alicloud-utils:1.1.5'
//    implementation 'com.umeng.umsdk:alicloud_beacon:1.0.1'
//
//    implementation 'com.umeng.umsdk:agoo-accs:3.3.8.8-open-fix2'
//    implementation 'com.umeng.umsdk:agoo_networksdk:3.5.5'
//    implementation 'com.umeng.umsdk:agoo_tlog:3.0.0.17'
//    implementation 'com.umeng.umsdk:agoo_tnet4android:3.1.14.9'


//    implementation 'com.meituan.android.walle:library:1.1.7'

//
////    小米Push通道
//    api 'com.umeng.umsdk:xiaomi-push:3.7.0'
//    api 'com.umeng.umsdk:xiaomi-umengaccs:1.1.4'
//
////    华为Push通道
//    api 'com.umeng.sdk:push-huawei:1.0.0'
//    api 'com.umeng.umsdk:huawei-basetb:2.6.3.306'
//    api 'com.umeng.umsdk:huawei-pushtb:2.6.3.306'
//    api 'com.umeng.umsdk:huawei-umengaccs:1.2.4'
//
////    魅族Push通道
//    api 'com.umeng.umsdk:meizu-push:3.8.7'
//    api 'com.umeng.umsdk:meizu-umengaccs:1.1.1'
//
//    //Oppo Push通道
//    api 'com.umeng.umsdk:oppo-push:2.0.2'
//    api 'com.umeng.umsdk:oppo-umengaccs:1.0.6'
//
//    //vivo Push通道
//    api 'com.umeng.umsdk:vivo-push:2.3.5'
//    api 'com.umeng.umsdk:vivo-umengaccs:1.1.0'




//基础组件库依赖(必须) Push 6.2.0版本必须升级新版本Common SDK
    api 'com.umeng.umsdk:common:9.3.0'
    api 'com.umeng.umsdk:utdid:1.5.2'
    api  'com.umeng.umsdk:asms:1.1.3'
    api 'com.umeng.umsdk:crash:0.0.5'

//友盟push相关依赖(必须)
    api 'com.umeng.umsdk:push:6.2.0'

    api 'com.umeng.umsdk:alicloud-httpdns:1.2.5'
    api 'com.umeng.umsdk:alicloud-utils:1.1.5'
    api 'com.umeng.umsdk:alicloud_beacon:1.0.1'

    api 'com.umeng.umsdk:agoo-accs:3.3.9.7-open'
    api 'com.umeng.umsdk:agoo_networksdk:3.5.5'
    api 'com.umeng.umsdk:agoo_tlog:3.0.0.17'
    api 'com.umeng.umsdk:agoo_tnet4android:3.1.14.9'





}


//多环境配置问题采用以下避免修改代码然后打包
//flavorDimensions "trumpchi"
//// 分环境打包配置
//productFlavors {
//    //开发环境打包配置
//    dev {
//        applicationId "com.cloudy.component.store"
//        manifestPlaceholders = [
//                UMENG_CHANNEL_VALUE: "dev",
//                JPUSH_CHANNEL      : "dev",
//        ]
//        buildConfigField "boolean" , "isReport" , "false"
//    }
//    //测试环境打包配置
//    pre {
//        applicationId "com.cloudy.component.store"
//        manifestPlaceholders = [
//                UMENG_CHANNEL_VALUE: "test",
//                JPUSH_CHANNEL      : "test",
//        ]
//        buildConfigField "boolean" , "isReport" , "false"
//    }
//    //生产环境打包配置
//    prod {
//        applicationId "com.cloudy.component.store"
//        manifestPlaceholders = [
//                UMENG_CHANNEL_VALUE: "prod",
//                JPUSH_CHANNEL      : "prod",
//        ]
//        buildConfigField "boolean" , "isReport" , "true"
//    }
//}
//
//sourceSets { //默认的源码等文件路径配置
//    dev {
//        java.srcDirs = ['src/dev', 'src/dev/java', 'src/dev/java/']
//    }
//    pre {
//        java.srcDirs = ['src/pre', 'src/pre/java', 'src/pre/java/']
//    }
//    prod {
//        java.srcDirs = ['src/prod', 'src/prod/java', 'src/prod/java/']// java源代码目录
//    }
//    main {
//        jniLibs.srcDirs = ['libs']  // 设置so包地址
//        res.srcDirs = ['src/main/res', 'src/main/res/person', 'src/main/res/vhall']// resource目录
//    }
//}
//

